CREATE or REPLACE procedure MDSR_INSERT_VM_FINAL_DUP_REF2
as

V_error VARCHAR(300);
v_cnt0 number;
v_cnt1 number;
v_cnt2 number;
V_run number;

begin

delete from  SBREXT.MDSR_VM_DUP_REF where (FIN_IDSEQ =VM_IDSEQ OR PROCESSED IS NULL)
AND( instr(CONCEPTS_CODE,'C45255')>0 OR CONDR_IDSEQ is null);
commit;

/** STEP 1
insert into MDSR_VM_DUP_REF Records for VM with CONDR_IDSEQ is null
a.FIN_VM FINAL VN public ID
a.vm_id RETIRED VM public ID**/
begin
select count(*) into V_cnt1 from SBREXT.MDSR_VM_DUP_REF where CONDR_IDSEQ is  null;
if V_cnt1=0 then
V_run:=1;
else
select max(RUN_NUMBER)+1 into V_cnt1 from SBREXT.MDSR_VM_DUP_REF where CONDR_IDSEQ is null;
end if;
INSERT INTO SBREXT.MDSR_VM_DUP_REF
(FIN_VM,FIN_IDSEQ ,VM_ID,VM_IDSEQ,CONCEPTS_NAME,LONG_NAME,PREFERRED_DEFINITION,DATE_CREATED,  RUN_NUMBER,DATE_INSERTED )
select
a.FIN_VM,b.VM_IDSEQ,a.vm_id,a.VM_IDSEQ,NULL,a.LONG_NAME,a.PREFERRED_DEFINITION,SYSDATE, V_cnt1,SYSDATE
from
(select  FIN_VM,vm_id,VM_IDSEQ,LONG_NAME,PREFERRED_DEFINITION
from (
select max(VM_ID) over (partition by UPPER(trim(LONG_NAME)),UPPER(trim(PREFERRED_DEFINITION)) order by UPPER(trim(LONG_NAME)),UPPER(trim(PREFERRED_DEFINITION)) ) as FIN_VM,

VM_ID,VM_IDSEQ,UPPER(trim(LONG_NAME))LONG_NAME,UPPER(trim(PREFERRED_DEFINITION))PREFERRED_DEFINITION,CONDR_IDSEQ
from
SBR.VALUE_MEANINGS
where   UPPER(ASL_NAME) not like '%RETIRED%'
and UPPER(trim(LONG_NAME))='NOT EVALUATED'--'9 MONTHS'
and CONDR_IDSEQ is null)
where FIN_VM<>VM_ID
MINUS
select  FIN_VM,vm_id,VM_IDSEQ,UPPER(trim(LONG_NAME))LONG_NAME,UPPER(trim(PREFERRED_DEFINITION))PREFERRED_DEFINITION from SBREXT.MDSR_VM_DUP_REF
where  CONCEPTS_NAME is null and CONDR_IDSEQ is null)a,
SBR.VALUE_MEANINGS b
where a.FIN_VM=b.VM_ID;
commit;

EXCEPTION
    WHEN others THEN
     V_error := substr(SQLERRM,1,200);
      insert into SBREXT.MDSR_VM_DUP_ERR VALUES('MDSR_INSERT_VM_FINAL_DUP_REF2', 'SBREXT.MDSR_VM_DUP_REF','STEP 1','NA','NA',V_error,sysdate );
  commit;
end;

/********* STEP 2 *******************/
/**Insert of duplicate VMs with Concepts(CONDR_IDSEQ is NOT NULL) and  Concepts Name like "integer".**/
begin

select count(*) into V_cnt0 from SBREXT.MDSR_VM_DUP_REF  R
,CON_DERIVATION_RULES_EXT CN
where R.CONDR_IDSEQ=CN.CONDR_IDSEQ
AND instr(CN.NAME,'C45255')>0;

if V_cnt0=0 then
V_run:=1;
else
select max(RUN_NUMBER)+1 into V_run from SBREXT.MDSR_VM_DUP_REF R
,CON_DERIVATION_RULES_EXT CN
where R.CONDR_IDSEQ=CN.CONDR_IDSEQ
AND instr(CN.NAME,'C45255')>0;
end if;
INSERT INTO SBREXT.MDSR_VM_DUP_REF
(FIN_VM,FIN_IDSEQ ,VM_ID,VM_IDSEQ,CONCEPTS_NAME,LONG_NAME,PREFERRED_DEFINITION,DATE_CREATED,  RUN_NUMBER,DATE_INSERTED )
select
a.FIN_VM,b.VM_IDSEQ,a.vm_id,a.VM_IDSEQ,a.CONCEPTS_NAME,a.LONG_NAME,a.PREFERRED_DEFINITION,SYSDATE, V_run,SYSDATE
from
(select  FIN_VM,vm_id,VM_IDSEQ,CONDR_IDSEQ,CONCEPTS_NAME,long_name,trim(upper(PREFERRED_DEFINITION)) PREFERRED_DEFINITION
from (
select max(VM_ID) over  (partition by CN.NAME,trim(upper(CONCEPT_VALUE_AG)) order by CN.NAME,trim(upper(CONCEPT_VALUE_AG)) ) as FIN_VM,
VM_ID,VM_IDSEQ,CN.NAME||'::'||CONCEPT_VALUE_AG CONCEPTS_NAME,VM.CONDR_IDSEQ,vm.long_name,vm.PREFERRED_DEFINITION
from
SBR.VALUE_MEANINGS VM,
SBREXT.CON_DERIVATION_RULES_EXT CN,
(SELECT CONDR_IDSEQ, LISTAGG(CONCEPT_VALUE,',') WITHIN GROUP (ORDER BY CONCEPT_VALUE) as CONCEPT_VALUE_AG
FROM  SBREXT.COMPONENT_CONCEPTS_EXT
where CONCEPT_VALUE is not null
GROUP BY CONDR_IDSEQ)CC
where   VM.CONDR_IDSEQ=CN.CONDR_IDSEQ
AND CC.CONDR_IDSEQ(+)=CN.CONDR_IDSEQ
AND UPPER(ASL_NAME) not like '%RETIRED%'
and instr(CN.NAME,'C45255')>0
and instr(CN.NAME,'XXXC45255')>0

)
where FIN_VM<>VM_ID

MINUS
select  FIN_VM,vm_id,VM_IDSEQ,R.CONDR_IDSEQ,CONCEPTS_NAME ,long_name,trim(upper(PREFERRED_DEFINITION)) PREFERRED_DEFINITION
from SBREXT.MDSR_VM_DUP_REF R,
SBREXT.CON_DERIVATION_RULES_EXT CN
where R.CONDR_IDSEQ=CN.CONDR_IDSEQ
AND instr(CN.NAME,'XXXC45255')>0)a,
SBR.VALUE_MEANINGS b
where a.FIN_VM=b.VM_ID;

commit;
EXCEPTION

    WHEN others THEN
     V_error := substr(SQLERRM,1,200);
      insert into SBREXT.MDSR_VM_DUP_ERR VALUES('MDSR_INSERT_VM_FINAL_DUP_REF2', 'SBR.MDSR_VM_DUP_REF','STEP 2','NA','NA',V_error,sysdate );
  commit;
end;

end MDSR_INSERT_VM_FINAL_DUP_REF2;
