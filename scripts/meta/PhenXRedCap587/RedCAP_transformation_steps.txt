RedCAP transformation steps:

1.place  all  instrumentPhenix#.csv files in directory 'C:\meta\REDCAP\'
2.create table "SBREXT"."REDCAP_PROTOCOL"
CREATE TABLE SBREXT.REDCAP_PROTOCOL
(
  VARIABLE_FIELD_NAME  VARCHAR2(400 ),
  FORM_NAME            VARCHAR2(400 ),
  SECTION              VARCHAR2(400 ),
  FIELD_TYPE           VARCHAR2(40 ),
  FIELD_LABEL          VARCHAR2(4000 ),
  CHOICES              VARCHAR2(200 ),
  FIELD_NOTE           VARCHAR2(40 ),
  QUESTION             NUMBER
)
3.create contrl file LOAD_REDCAP.ctl to load data from all instrumentPhenix#.csv to "SBREXT"."REDCAP_PROTOCOL"
OPTIONS ( ERRORS= 10000, SKIP=1)
LOAD DATA
INFILE 'C:\meta\REDCAP\instrumentPhenix1.csv"str '\r'" 
INFILE 'C:\meta\REDCAP\instrumentPhenix2.csv' "str '\r'" 
.......................
INFILE 'C:\meta\REDCAP\instrumentPhenix50.csv' "str '\r'" 
BADFILE 'C:\meta\RedCap\instrument3.bad'
DISCARDFILE 'C:\meta\RedCap\instrument3.dsc'
INTO TABLE "SBREXT"."REDCAP_PROTOCOL"
append
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
TRAILING NULLCOLS   (              
 VARIABLE_FIELD_NAME   CHAR(400) ,
    FORM_NAME CHAR(400), 
    SECTION CHAR(40), 
    FIELD_TYPE CHAR(40), 
    FIELD_LABEL CHAR(4000) ,
    CHOICES CHAR(200), 
    FIELD_NOTE CHAR(40),
QUESTION SEQUENCE(0,1) )
4. load data to "SBREXT"."REDCAP_PROTOCOL" via SQL LOADER using  the contrl file LOAD_REDCAP.ctl
5. Update column  SBREXT"."REDCAPPROTOCOL"  QUESTION for each protocol starting from 0

merge into REDCAP_PROTOCOL t1
using (select min(question)question,field_note 
from REDCAP_PROTOCOL group by field_note ) t2
on (t1.field_note = t2.field_note)
when matched then 
update set t1.question = t1.question-t2.question

create table SBREXT.REDCAP_UNDEFINED_CODE to move string value column CHOICES to 
multiple records.
CREATE TABLE SBREXT.REDCAP_UNDEFINED_CODE
( PROTOCOL             VARCHAR2(50)  ,
  QUESTION            NUMBER,
  CODE_NAME        VARCHAR2(30 )     ,
  CODE_VALUE            VARCHAR2(100 BYTE),
  CODE_ORDER NUMBER    
)

populate table with SQL statment

INSERT INTO  SBREXT.REDCAP_UNDEFINED_CODE
( PROTOCOL             ,
  QUESTION           ,
  CODE_name           ,
  CODE_VALUE            ,
  CODE_ORDER)
  select 
  PROTOCOL,
  question,
  REGEXP_SUBSTR(myelement, '[^,]+', 1, 1)    ,
REGEXP_SUBSTR(myelement, '[^,]+', 1, 2)   ,
case 
when length(REGEXP_SUBSTR(myelement, '[^,]+', 1, 1))<15 then 0 
when length(REGEXP_SUBSTR(myelement, '[^,]+', 1, 1))>15 then to_number(substr(REGEXP_SUBSTR(trim(myelement), '[^,]+', 1, 1),16))
 end 
 from 
(SELECT distinct question,substr(trim(FIELD_NOTE),-8) PROTOCOL
       ,regexp_substr(CHOICES,'[^|]+', 1, LEVEL) AS myelement
   FROM SBREXT.REDCAPPROTOCOL_TEMP1 where CHOICES is not null
CONNECT BY regexp_substr(CHOICES, '[^|]+', 1, LEVEL) IS NOT NULL)
order by 1,2,5;

6.create data types for XML query
CREATE OR REPLACE TYPE SBREXT."REDCAP_validValue"    as object(
    "displayOrder"                                     NUMBER
    ,"value"                                      VARCHAR2(200)
    ,"meaningText"                                  VARCHAR2(200)  )
  ;
  CREATE OR REPLACE TYPE  SBREXT.REDCAP_validValue_LIST_T   AS TABLE OF SBREXT."REDCAP_validValue" ;
  
   CREATE OR REPLACE TYPE SBREXT."REDCAP_QUESTION"    as object(
    "displayOrder"                                     NUMBER
    ,"questionText"                                      VARCHAR2(2000)
    ,"validValue"              REDCAP_validValue_LIST_T 
    )
  ;

  CREATE OR REPLACE TYPE SBREXT."REDCAP_QUESTION_LIST_T"  AS TABLE OF SBREXT."REDCAP_QUESTION" ;

CREATE OR REPLACE TYPE SBREXT."REDCAP_FORM"    as object(
    "collectionName"   VARCHAR2(200)
    ,"collectionDescription"  VARCHAR2(200)
    ,"context"                                    VARCHAR2(40)
    ,"createdBy"                                      VARCHAR2(100)
    ,"changeNote"                              VARCHAR2(40)
    ,"preferredDefinition"                      VARCHAR2(2000)
    ,"type"              VARCHAR2(5) 
    ,"module"                                   VARCHAR2(100)
    ,"Question"   REDCAP_QUESTION_LIST_T
       )
  ;
7.create XML query based on protocol value.

SELECT sys_xmlgen(REDCAP_FORM (
'PhenX Protocols - '||p.preferred_name,
'Load PhenX '||p.preferred_name,
'Phenx' ,
 created_By,
'Uploaded via FormLoader' ,
 p.preferred_definition,
'CFR',             
 form_name ,
   CAST (
     MULTISET (
         SELECT question,
          field_label,
             CAST (
               MULTISET (
                   SELECT     
                   CODE_ORDER, 
                   CODE_name    , 
                    CODE_VALUE   
                  from  REDCAP_UNDEFINED_CODE u
               where u.question=rp.question
               and protocol=p.preferred_name
              ) AS REDCAP_validValue_LIST_T)      "ValueNameList"                      
   from REDCAP_PROTOCOL rp
   where rp.Field_Note=r.Field_Note)as REDCAP_QUESTION_LIST_T  ) )).getClobVal() as XML_QUERY
from
(select distinct form_name,field_note from REDCAP_PROTOCOL) r,
protocols_ext p
where (p.preferred_name=substr(trim(field_note),-8) or p.preferred_name=trim(field_note));


8.compare the reasult with latest ....GeneratedFormFinalFormCartV2.xml

9.create SP to wright the xml files to directory 'SBREXT_DIR'





