 CREATE OR REPLACE TYPE SBREXT."REDCAP_QUESTION"    as object(
 "isDerived"       VARCHAR2(4),
"displayOrder"     NUMBER,
"dateCreated"      DATE,
"questionText"     VARCHAR2(4000),
"instruction"      VARCHAR2(1000)
"isEditable"       VARCHAR2(4),
"isMandatory"      VARCHAR2(4),
"multiValue"       VARCHAR2(4),
"validValue"       VARCHAR2(1000));

 drop type REDCAP_FORM_S;
drop type REDCAP_SECTION_LIST_T;
drop type REDCAP_SECTION_T;
CREATE OR REPLACE TYPE SBREXT."REDCAP_SECTION_T"    as object(
    "displayOrder"                                     NUMBER
    ,"maximumModuleRepeat"                              NUMBER
     ,"createdBy"   VARCHAR2(40)
     , "dateCreated" date
     , "longName"    VARCHAR2(1500)      
     , "preferredDefinition" VARCHAR2(40)
     ,"question"                                 REDCAP_QUESTION_LIST_T 
    )
  ;
  CREATE OR REPLACE TYPE SBREXT."REDCAP_SECTION_LIST_T"  AS TABLE OF SBREXT."REDCAP_SECTION_T" ;
CREATE OR REPLACE TYPE SBREXT."REDCAP_FORM_S"    as object(
    
    "context"                                    VARCHAR2(40)
    ,"createdBy"                                      VARCHAR2(100)
    ,"dateCreated"                          date
    ,"longName"  VARCHAR2(100)   
    ,"changeNote"                              VARCHAR2(40)
    ,"preferredDefinition"                      VARCHAR2(2000)
    ,"cadsrRAI"             VARCHAR2(40)
    ,"publicid"  NUMBER
     ,"version"  NUMBER
    ,"type"              VARCHAR2(5) 
    ,"headerInstruction"       VARCHAR2(100)                          
    ,"footerInstruction"  VARCHAR2(100)
    ,"module" REDCAP_SECTION_LIST_T)
      ;
      

 
 
 CREATE OR REPLACE TYPE SBREXT."REDCAP_QUESTION"    as object(
"isDerived"       VARCHAR2(4),
"displayOrder"     NUMBER,
"dateCreated"      DATE,
"questionText"     VARCHAR2(4000),
"instruction"      VARCHAR2(1000)
"isEditable"       VARCHAR2(4),
"isMandatory"      VARCHAR2(4),
"multiValue"       VARCHAR2(4),
"validValue"       REDCAP_validValue_LIST_T);



create view REDCAP_VW as 
SELECT p.protocol,
   CAST(MULTISET(SELECT        NVL(s.SECTION_SEQ,'0') ,
                              '0',
                              'panh',
                               SYSDATE,
                               s.SECTION,
                               'No definition',
                               CAST(MULTISET(SELECT  'false',
							                              q.section_Q_seq,
														  sysdate,
														  q.field_label,
														  q.LOGIC,
														  'No',
														  NVL(q.REQUIRED,'No'),
														  'No',
														  CHOICES
                               from  REDCAP_PROTOCOL_NEW  q
                               where p.protocol = q.protocol(+)
                               and s.SECTION_SEQ=q.SECTION_SEQ(+)
                               order by q.section_Q_seq) as REDCAP_QUESTION_LIST_T) "Question"
   FROM REDCAP_SECTION s 
   WHERE p.protocol = s.protocol(+)
   ORDER BY s.SECTION_SEQ)AS REDCAP_SECTION_LIST_T
   ) as "module"
FROM 
(select distinct  protocol ,form_name from REDCAP_PROTOCOL_NEW
order by protocol,form_name) p;

 SELECT 
'PhenX Protocols - '||p.protocol "collectionName",
'Load PhenX '||p.protocol "collectionDescription",
REDCAP_FORM_S (
'Phenx' ,
 created_By,
 sysdate,
 form_name ,
'Uploaded via FormLoader' ,
 pe.preferred_definition,
 '2.16.840.1.113883.3.26.2',
 null,
 null,
'CFR',             
 null,
 null ,
 CAST(MULTISET(SELECT        NVL(s.SECTION_SEQ,'0') ,
                              '0',
                              'panh',
                               SYSDATE,
                               s.SECTION,
                               'No definition',
                               CAST(MULTISET(SELECT  'false',
							                              q.section_Q_seq,
														  sysdate,
														  q.field_label,
														  q.LOGIC,
														  'No',
														  NVL(q.REQUIRED,'No'),
														  'No',
														  CHOICES
                               from  REDCAP_PROTOCOL_NEW  q
                               where p.protocol = q.protocol(+)
                               and s.SECTION_SEQ=q.SECTION_SEQ(+)
                               order by q.section_Q_seq) as REDCAP_QUESTION_LIST_T) "Question"
   FROM REDCAP_SECTION s 
   WHERE p.protocol = s.protocol(+)
   ORDER BY s.SECTION_SEQ)AS REDCAP_SECTION_LIST_T
   ) as "module"
FROM 
(select distinct  protocol ,form_name from REDCAP_PROTOCOL_NEW
) p
,
protocols_ext pe
where p.preferred_name=r.protocol order by protocol,form_name;		


 SELECT 
'PhenX Protocols - '||p.protocol "collectionName",
'Load PhenX '||p.protocol "collectionDescription",
REDCAP_FORM_S (
'Phenx' ,
 created_By,
 sysdate,
 form_name ,
'Uploaded via FormLoader' ,
 pe.preferred_definition,
 '2.16.840.1.113883.3.26.2',
 null,
 null,
'CFR',             
 null,
 null ,
 CAST(MULTISET(SELECT   NVL(s.SECTION_SEQ,'0') ,
                            '0',
                            'panh',
                             SYSDATE,
                             s.SECTION,
                             'No definition',
                              CAST(MULTISET(SELECT  'false',
							                              q.section_Q_seq,
														  sysdate,
														  q.field_label,
														  q.LOGIC,
														  'No',
														  NVL(q.REQUIRED,'No'),
														  'No',
														  CAST (
                                                          MULTISET (SELECT     
                                                          VAL_ORDER, 
                                                          VAL_name    , 
                                                          VAL_VALUE   
                              from  REDCAP_VALUE_CODE u
                              where u.question=rp.question
                              and u.protocol=p.preferred_name
                             -- and u.protocol='PX020302'
                                ) AS REDCAP_validValue_LIST_T)      "ValueNameList"  
                               from  REDCAP_PROTOCOL_NEW  q
                               where p.protocol = q.protocol(+)
                               and s.SECTION_SEQ=q.SECTION_SEQ(+)
                               order by q.section_Q_seq) as REDCAP_QUESTION_LIST_T) "Question"
   FROM REDCAP_SECTION s 
   WHERE p.protocol = s.protocol(+)
   ORDER BY s.SECTION_SEQ)AS REDCAP_SECTION_LIST_T
   ) as "module"
FROM 
(select distinct  protocol ,form_name from REDCAP_PROTOCOL_NEW
) p
,
protocols_ext pe
where p.preferred_name=r.protocol order by protocol,form_name;										
												
												